.row.page-heading
  .pull-left
    .col-md-12
      h3 Devices
    ol.breadcrumb
      = render_breadcrumbs
  .pull-right
    .btn-right
      = link_to 'Toggle Filters', "#", class: "btn btn-default toggle"
      | &nbsp; &nbsp;
      = link_to 'New Devices', new_device_path, class: "btn btn-primary"
  .clear-both

.row.to-be-toggled
  .col-md-12
    = form_tag '', :method => :get do
      .row
        .col-md-3
          .grid.simple
            .grid-title
              h4 Device Model
              .tools
                a.collapse href="javascript:;"
            .grid-body
              = select_tag(:by_device_model, content_tag(:option,'Device Models ...', :value=>"")+options_for_select(all_device_models, params[:by_device_model]), :class => "form-control")
        .col-md-3
          .grid.simple
            .grid-title
              h4 Device Type
              .tools
                a.collapse href="javascript:;"
            .grid-body
              = select_tag(:by_device_type, content_tag(:option,'Device Types ...', :value=>"")+options_for_select(all_device_types, params[:by_device_type]), :class => "form-control")
        .col-md-3
          .grid.simple
            .grid-title
              h4 Traceability
              .tools
                a.collapse href="javascript:;"
            .grid-body
              label
                = radio_button_tag 'has_simcard', 'all' , checked_radio_button(params["has_simcard"], 'all')
                = "All"
              label
                = radio_button_tag 'has_simcard', 'true' , checked_radio_button(params["has_simcard"], 'true')
                = "With Simcard"
              label
                = radio_button_tag 'has_simcard', 'false' , checked_radio_button(params["has_simcard"], 'false')
                = "Without Simcard"

        .col-md-3
          .grid.simple
            .grid-title
              h4 Driver
              .tools
                a.collapse href="javascript:;"
            .grid-body
              label
                = radio_button_tag 'available', 'all' , checked_radio_button(params["has_simcard"], 'all')
                = "All"
              label
                = radio_button_tag 'available', 'true' , checked_radio_button(params["has_simcard"], 'true')
                = "Available"
              label
                = radio_button_tag 'available', 'false' , checked_radio_button(params["has_simcard"], 'false')
                = "Used"
      .row
        .col-md-12
          .pull-right= submit_tag 'Apply Filters', :class => "btn btn-default"
      br/

.row
  .col-md-12
    = form_tag batch_destroy_devices_path, id: "destroy_devices", :method => :put do
      .row
        .col-md-12
          .grid.simple
            .grid-body
              - if @devices.present?
                .pull-right
                  = search_form_for @q do |f|
                    = f.search_field :name_cont, :placeholder => "Search with name"
                    = f.submit "Search", :class => "btn btn-default"
                .table-responsive
                  table.table
                    thead
                      tr
                        th
                        = content_tag :th, sort_link(@q, :name)
                        = content_tag :th, sort_link(@q, :emei)
                        = content_tag :th, sort_link(@q, :cost_price)
                        th
                    tbody#devices-tbody
                      = render partial: '/devices/partials/devices_rows', locals: { devices: @devices }

                p.pagination = link_to_next_page(@devices, 'Load more data', :remote => true)
              - else
                .text-center
                  h2 No Devices at the moment
                  i.fa.fa-ban.fa-4x              
                  h3 Try to create a device. The button is on top right of this page.

#quick-access.admin-bar style="bottom: -115px;"
  .admin-bar-inner
    button.btn.btn-danger.btn-add#batch_destroy type="button"
      i.icon-trash
      | Move to trash
    button.btn.btn-white.btn-cancel type="button" Cancel
/ = render 'modal'




