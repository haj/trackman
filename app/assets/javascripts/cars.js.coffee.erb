# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

$(document).ready ->

    $('.page-sidebar').css('height',$('.page-content').css('height'))

    if (typeof gon != "undefined") && gon.resource == "cars" 
        #console.log gon

        class CustomMarkerBuilder extends Gmaps.Google.Builders.Marker
          create_marker: ->
            options = _.extend @marker_options(), @rich_marker_options()
            @serviceObject = new RichMarker options

          rich_marker_options: ->
            marker = document.createElement("div")
            marker.setAttribute('class', 'custom_marker')
            marker.innerHTML = this.args.custom_marker
            _.extend(@marker_options(), { flat: true })
            { content: marker }

          create_infowindow: ->
            return null unless _.isString @args.custom_infowindow

            boxText = document.createElement("div")
            boxText.setAttribute("class", 'custom_infowindow')
            boxText.innerHTML = @args.custom_infowindow
            @infowindow = new InfoBox(@infobox(boxText))

          infobox: (boxText)->
            content: boxText
            pixelOffset: new google.maps.Size(30,-20)
            boxStyle:
              width: "130px"


        if gon.map_id == "cars_show"

            $('#filter_by_date .time').timepicker({
                'showDuration': true,
                'timeFormat': 'H:i',
            });

            date = new Date();
            date.setHours(6,0,0,0);

            if $('.start_time').val().length == 0
                $('#filter_by_date .start_time').timepicker('setTime', date);

            if $('.end_time').val().length == 0
                $('#filter_by_date .end_time').timepicker('setTime', new Date());


            $('#filter_by_date .date').datepicker({
                'format': 'd/m/yyyy',
                'autoclose': true
            });

            if $('.date').val().length == 0
                $('#filter_by_date .date').datepicker('setDate', new Date())

            basicExampleEl = document.getElementById('filter_by_date');
            datepair = new Datepair(basicExampleEl);

            handler = Gmaps.build("Google", builders: { Marker: CustomMarkerBuilder } )
            handler.buildMap { internal: id: gon.map_id }, ->
                #markers = handler.addMarkers(gon.data)

                console.log gon.data

                for one_marker, i in gon.data

                    if i == 0 
                        pin = "<img width='36px' height='36px' src='<%= image_path('red_pin.png') %>'>"
                    else if gon.data.length - 1 == i
                        pin = "<img width='36px' height='36px' src='<%= image_path('green_pin.png') %>'>"
                    else
                        pin = "<img width='36px' height='36px' src='<%= image_path('yellow_pin.png') %>'>"

                    content = "<div>" + one_marker.infowindow + "</div>"
                    
                    marker = handler.addMarker
                        lat:               one_marker.lat
                        lng:               one_marker.lng
                        custom_marker:     pin
                        custom_infowindow: content
                    handler.bounds.extendWith(marker)
                    
                handler.fitMapToBounds()
                handler.getMap().setZoom(11)

        else 
            handler = Gmaps.build("Google", builders: { Marker: CustomMarkerBuilder } )
            handler.buildMap { internal: id: gon.map_id }, ->
                #markers = handler.addMarkers(gon.data)

                for one_marker, i in gon.data

                    pin = "<img width='36px' height='36px' src='<%= image_path('red_pin.png') %>'>"
                    content = "<div style='height:100%;'>" + one_marker.infowindow + "</div>"
                    
                    marker = handler.addMarker
                        lat:               one_marker.lat
                        lng:               one_marker.lng
                        custom_marker:     pin
                        custom_infowindow: content

                    handler.bounds.extendWith(marker)
                    
                handler.fitMapToBounds()
                handler.getMap().setZoom(3)



      ###      
        handler = Gmaps.build('Google')

        handler.buildMap { provider: { zoom: 3 }, internal: { id: gon.map_id }}, ->
            markers = handler.addMarkers(gon.data)
            window.markers = markers
            handler.bounds.extendWith(markers)
            handler.fitMapToBounds()
            handler.getMap().setZoom(12)
            
        refreshCarsMap = (data) ->
            #console.log "Refreshing cars"
            #console.log(data)
            handler.removeMarkers(window.markers)
            window.markers = handler.addMarkers(data)
        gon.watch('data', interval: 30000, refreshCarsMap)


    else if (typeof gon != "undefined") && gon.resource == "cars"
        handler = Gmaps.build('Google')

        handler.buildMap { provider: { zoom: 1 }, internal: { id: gon.map_id }}, ->
            markers = handler.addMarkers(gon.data)
            window.markers = markers
            handler.bounds.extendWith(markers)
            handler.fitMapToBounds()
            
        refreshCarsMap = (data) ->
            console.log "Refreshing cars"
            console.log(data)
            handler.removeMarkers(window.markers)
            window.markers = handler.addMarkers(data)
        gon.watch('data', interval: 3000, refreshCarsMap)
        ###
				





				



