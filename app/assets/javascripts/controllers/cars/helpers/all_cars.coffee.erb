class DetailedMarkerBuilder extends Gmaps.Google.Builders.Marker
    create_marker: ->
        options = _.extend @marker_options(), @rich_marker_options()
        @serviceObject = new RichMarker options

    rich_marker_options: ->
        marker = document.createElement("div")
        marker.setAttribute('class', 'custom_marker')
        marker.innerHTML = this.args.custom_marker
        _.extend(@marker_options(), { flat: true })
        { content: marker }

    create_infowindow: ->
        return null unless _.isString @args.detailed_infowindow

        boxText = document.createElement("div")
        boxText.setAttribute("class", 'detailed_infowindow')
        boxText.innerHTML = @args.detailed_infowindow
        @infowindow = new InfoBox(@infobox(boxText))

    infobox: (boxText)->
        content: boxText
        pixelOffset: new google.maps.Size(-60,-60)
        boxStyle:
            width: "150px"


@module "Cars", ->
    class @AllCars
        @show : () ->
            handler = Gmaps.build("Google", builders: { Marker: DetailedMarkerBuilder } )
            handler.buildMap { provider: { scrollwheel: false }, internal: { id: gon.map_id }}, ->
                #markers = handler.addMarkers(gon.data)

                console.log("Loaded vehicles")
                console.log(gon.data)

                for one_marker, i in gon.data

                    vehicle = one_marker.infowindow.split("/");

                    if vehicle[1] == ""
                        vehicle[1] = "No Driver"

                    console.log("Loaded one vehicle")

                    pin = "<img width='36px' height='36px' src='<%= image_path('red_pin.png') %>'>"
                    
                    content = "<div class='map-tooltip' ><p>"+ vehicle[0] + "</p><p>" + vehicle[1] + "</p><p>" + vehicle[2] + "</p></div>" 

                    
                    marker = handler.addMarker
                        lat:               one_marker.lat
                        lng:               one_marker.lng
                        custom_marker:     pin
                        detailed_infowindow: content

                    handler.bounds.extendWith(marker)
                    
                handler.fitMapToBounds()
                handler.getMap().setZoom(3)
            